name: release-please

on:
    push:
        branches:
            - main

permissions:
    contents: write
    pull-requests: write

jobs:
    release-please:
        name: Create Release (Release Please)
        runs-on: ubuntu-latest
        steps:
            - name: Create Release via Release Please
              id: release
              uses: googleapis/release-please-action@v4
              with:
                  # this assumes that you have created a personal access token
                  # (PAT) and configured it as a GitHub action secret named
                  # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
                  token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
                  # this is a built-in strategy in release-please, see "Action Inputs"
                  # for more options
                  release-type: rust

            # - uses: actions/checkout@v4
            # - name: Build Release Artifact(s)
            #   if: ${{ steps.release.outputs.release_created }}
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   run: cargo build --release

            - name: Build Release Artifact(s)
              if: ${{ steps.release.outputs.release_created }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              uses: build-release

            - name: Upload Release Artifact(s)
              if: ${{ steps.release.outputs.release_created }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              # run: gh release upload ${{ steps.release.outputs.tag_name }} ./target/release/multi-platform-auto-release
              run: gh release upload ${{ steps.release.outputs.tag_name }} release_ubuntu release_mac release_windows

    build-release:
        name: Build Release
        id: build-release
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                include:
                    - os: ubuntu-latest
                      release_suffix: ubuntu
                    - os: macos-latest
                      release_suffix: mac
                    - os: windows-latest
                      release_suffix: windows
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Build for Linux
              if: matrix.os == 'ubuntu-latest'
              run: echo "Ubuntu Latest" > release_ubuntu

            - name: Build for MacOS
              if: matrix.os == 'macos-latest'
              run: echo "MacOS Latest" > release_mac

            - name: Build for Windows
              if: matrix.os == 'windows-latest'
              run: echo "Windows Latest" > release_windows
